;--------------
;
;   GAME
;   OVER
;
;---------------
[GameOverTitle]
ID = GameOver
Graphic = GameOverGraphic
Position = (12, 10, 0.5)
ChildList = TitleBackPanel
Group = Overlay
TrackList = T-StoreID

[GameOverGraphic]
Text  = GameOverText

[GameOverText@8BitDisplayText]
String	= "GAME
OVER"

;--------------
;
;   LEVEL X
;
;---------------
[LevelTitle]
Graphic = LevelGraphic
Position = (12, 10, 0.5)
ChildList = TitleBackPanel
Group = Foreground

[LevelGraphic]
Text  = LevelText

[LevelText@8BitDisplayText]
String	=	"LEVEL
  X"


;--------------
;
;   DECRUNCHING
;
;---------------
[DecrunchTitle]
Graphic = DecrunchGraphic
Position = (12, 10, 0.5)
ChildList = DecrunchTitleBackPanel
Group = Foreground

[DecrunchGraphic]
Text  = DecrunchText

[DecrunchText@8BitDisplayText]
String	=	"DE-
CRUNCH
ING..."


; Shared back panel
; -----------------

[TitleBackPanelGraphic]
Texture = pixel

[TitleBackPanel]
Graphic = TitleBackPanelGraphic
Scale = 64
Color = (255, 0, 0)
Position = (-33, -31, 0.5)

[DecrunchTitleBackPanel@TitleBackPanel]
Graphic = DecrunchTitleBackPanelGraphic
ShaderList = DecrunchShader

[DecrunchTitleBackPanelGraphic@TitleBackPanelGraphic]
Texture = pixel

[DecrunchShader]
ParamList = texture # offset # time
offset = 0.0 ~ 1.0
time = time
UseCustomParam= true
Code = "
void main() {

    vec2 p = gl_TexCoord[0].xy;
    vec4 textureCol = texture2D(texture, p);

	vec3 orange = vec3(1.0, 0.5, 0.0);
	vec3 black = vec3(0.0, 0.0, 0.0);
	vec3 white = vec3(1.0, 1.0, 1.0);

	float progressValue = time;
	if (progressValue > 2.0){
		progressValue = 2.0;
	}

	float oscillating_time = 0.5+0.5*sin(time/0.005 ) /2 * p.y;

	//Progress bar keyline
	if (p.y < oscillating_time){
		gl_FragColor.rgb = black;
	} else {
		gl_FragColor.rgb = orange;
	}

	//Fake Progress Bar
	if (p.y >= 0.79 && p.y <= 0.80){
		gl_FragColor.rgb = white;
	} else if (p.y > 0.80){
		if (p.x <= progressValue / 2){
			gl_FragColor.rgb = black;
		}
	}

    gl_FragColor.a = textureCol.a;


}"
